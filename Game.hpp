#ifndef GAME_HPP
#define GAME_HPP

#include <vector>
#include <cstdlib>

#include "Toy.hpp"
#include "Frame.hpp"
#include "Form.hpp"

class Game
{
public:
	Game();

	virtual ~Game() = default;

	void StartGame();

	void TakeToys();
	void PlaceToys();
	void ShowToys();

private:
	//=======================================================
	// пачка приватных методов которые будут нам игру играть
	//=======================================================



	std::vector<Frame> frames_;
	std::vector<Toy> bucket_;
	std::vector<Toy> hand_;
};

#endif // !GAME_HPP

//Правила игры:
// В ведёрке при содании есть некоторое количество 
// игрушек(хранятся в коллекции)
// У ведёрка при создании должно быть некоторое количество рамок 
// для продевания игрушек(тоже можно в коллекцию засунуть)
// игрок может видеть что он взял из ведёрка
// игрок может попробовать засунуть в какую нибудь рамку игрушку из руки
// если рамка не позволяет продеть игрушку то она остаётся у игрока
// 
// Задание:
// нельзя трогать Bridges.cpp
// нужно реализовать в классе Game функционал игры
// При необходимости вы можете использовать дополнительные классы или выносить 
// алгоритмы в вспомогательные методы 
//
